{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/Fufu/booking/fish-booking-system/app/api/export/excel/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { PrismaClient } from \"@prisma/client\";\nimport * as XLSX from \"xlsx\";\n\nconst prisma = new PrismaClient();\ninterface Booking {\n    id: number;\n    team: string;\n    customerGroup: string;\n    customerName: string;\n    price: string; // Assuming price is stored as a string\n    dailyQuantities: Record<string, number>; // Assuming dailyQuantities is a JSON object\n    fishSize: string;\n    fishType: string;\n    code: string; // Salesperson code\n    createdAt: Date;\n  }\nexport async function GET() {\n  try {\n    const bookings: Booking[] = await prisma.booking.findMany();\n\n    // เตรียมข้อมูลในรูปแบบของ JSON สำหรับสร้าง Excel\n    const data: any[] = [];\n    bookings.map((booking) => { // ใช้ booking ซึ่งถูกดึงมาจากฐานข้อมูล\n      // คำนวณรวมจำนวนปลาทั้งสัปดาห์\n      const totalQuantity = Object.values(booking.dailyQuantities).reduce(\n        (sum: number, qty: any) => sum + Number(qty),\n        0\n      );\n\n      // แยกข้อมูลตามขนาดปลาและวัน\n      data.push({\n        Team: booking.team,\n        \"กลุ่มลูกค้า\": booking.customerGroup,\n        \"ชื่อลูกค้า\": booking.customerName,\n        \"ขนาดปลา\": booking.fishSize,\n        \"ราคาทั้งสัปดาห์\": booking.price,\n        ...booking.dailyQuantities, // รวมข้อมูลตามวัน\n        \"รวมทั้งสัปดาห์\": totalQuantity,\n      });\n    });\n\n    // สร้าง Worksheet จากข้อมูล\n    const ws = XLSX.utils.json_to_sheet(data);\n\n    // สร้าง Workbook\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Booking Report\");\n\n    // แปลงเป็น Buffer\n    const excelBuffer = XLSX.write(wb, { type: \"buffer\", bookType: \"xlsx\" });\n\n    // ส่งออกไฟล์ Excel\n    return new NextResponse(excelBuffer, {\n      headers: {\n        \"Content-Type\":\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"Content-Disposition\": \"attachment; filename=Booking_Report.xlsx\",\n      },\n    });\n  } catch (error) {\n    console.error(\"Error generating Excel:\", error);\n    return NextResponse.json(\n      { error: \"Failed to generate Excel file\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,SAAS,IAAI,2GAAA,CAAA,eAAY;AAaxB,eAAe;IACpB,IAAI;QACF,MAAM,WAAsB,MAAM,OAAO,OAAO,CAAC,QAAQ;QAEzD,iDAAiD;QACjD,MAAM,OAAc,EAAE;QACtB,SAAS,GAAG,CAAC,CAAC;YACZ,8BAA8B;YAC9B,MAAM,gBAAgB,OAAO,MAAM,CAAC,QAAQ,eAAe,EAAE,MAAM,CACjE,CAAC,KAAa,MAAa,MAAM,OAAO,MACxC;YAGF,4BAA4B;YAC5B,KAAK,IAAI,CAAC;gBACR,MAAM,QAAQ,IAAI;gBAClB,eAAe,QAAQ,aAAa;gBACpC,cAAc,QAAQ,YAAY;gBAClC,WAAW,QAAQ,QAAQ;gBAC3B,mBAAmB,QAAQ,KAAK;gBAChC,GAAG,QAAQ,eAAe;gBAC1B,kBAAkB;YACpB;QACF;QAEA,4BAA4B;QAC5B,MAAM,KAAK,gIAAK,KAAK,CAAC,aAAa,CAAC;QAEpC,iBAAiB;QACjB,MAAM,KAAK,gIAAK,KAAK,CAAC,QAAQ;QAC9B,gIAAK,KAAK,CAAC,iBAAiB,CAAC,IAAI,IAAI;QAErC,kBAAkB;QAClB,MAAM,cAAc,gIAAK,KAAK,CAAC,IAAI;YAAE,MAAM;YAAU,UAAU;QAAO;QAEtE,mBAAmB;QACnB,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,aAAa;YACnC,SAAS;gBACP,gBACE;gBACF,uBAAuB;YACzB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAgC,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}